Searching 24123 files for "modalVideoEffect"

/Users/timeless/react-modal-video/lib/index.js:
  157          _CSSTransition2.default,
  158          {
  159:           classNames: this.props.classNames.modalVideoEffect,
  160            timeout: this.props.animationSpeed
  161          },
  ...
  251    animationSpeed: 300,
  252    classNames: {
  253:     modalVideoEffect: 'modal-video-effect',
  254      modalVideo: 'modal-video',
  255      modalVideoClose: 'modal-video-close',

/Users/timeless/react-modal-video/node_modules/.bin/in-install:
    ERROR: Unable to open file

/Users/timeless/react-modal-video/node_modules/.bin/in-publish:
    ERROR: Unable to open file

/Users/timeless/react-modal-video/node_modules/.bin/node-gyp:
    ERROR: Unable to open file

/Users/timeless/react-modal-video/node_modules/.bin/node-sass:
    ERROR: Unable to open file

/Users/timeless/react-modal-video/node_modules/.bin/nopt:
    ERROR: Unable to open file

/Users/timeless/react-modal-video/node_modules/.bin/not-in-install:
    ERROR: Unable to open file

/Users/timeless/react-modal-video/node_modules/.bin/not-in-publish:
    ERROR: Unable to open file

/Users/timeless/react-modal-video/node_modules/.bin/sassgraph:
    ERROR: Unable to open file

/Users/timeless/react-modal-video/src/index.jsx:
  112      return (
  113        <CSSTransition
  114:         classNames={this.props.classNames.modalVideoEffect}
  115          timeout={this.props.animationSpeed}
  116        >
  ...
  190    animationSpeed: 300,
  191    classNames: {
  192:     modalVideoEffect: 'modal-video-effect',
  193      modalVideo: 'modal-video',
  194      modalVideoClose: 'modal-video-close',

4 matches across 2 files


Searching 24123 files for "modalvideo"

/Users/timeless/react-modal-video/readme.md:
   33  import React from 'react'
   34  import ReactDOM from 'react-dom'
   35: import ModalVideo from 'react-modal-video'
   36  
   37  class App extends React.Component {
   ..
   52      return (
   53        <div>
   54:         <ModalVideo channel='youtube' isOpen={this.state.isOpen} videoId='L61p2uyiMSo' onClose={() => this.setState({isOpen: false})} />
   55          <button onClick={this.openModal}>Open</button>
   56        </div>
   ..
  252  	<tr>
  253  		<td rowspan="6">classNames</td>
  254: 		<td>modalVideo</td>
  255  		<td>'modal-video'</td>
  256  	</tr>
  257  	<tr>
  258: 		<td>modalVideoClose</td>
  259  		<td>'modal-video-close'</td>
  260  	</tr>
  261  	<tr>
  262: 		<td>modalVideoBody</td>
  263  		<td>'modal-video-body'</td>
  264  	</tr>
  265  	<tr>
  266: 		<td>modalVideoInner</td>
  267  		<td>'modal-video-inner'</td>
  268  	</tr>
  269  	<tr>
  270: 		<td>modalVideoIframeWrap</td>
  271  		<td>'modal-video-movie-wrap'</td>
  272  	</tr>
  273  	<tr>
  274: 		<td>modalVideoCloseBtn</td>
  275  		<td>'modal-video-close-btn'</td>
  276  	</tr>

/Users/timeless/react-modal-video/lib/index.js:
   23  function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
   24  
   25: var ModalVideo = function (_React$Component) {
   26:   _inherits(ModalVideo, _React$Component);
   27  
   28:   function ModalVideo(props) {
   29:     _classCallCheck(this, ModalVideo);
   30  
   31:     var _this = _possibleConstructorReturn(this, (ModalVideo.__proto__ || Object.getPrototypeOf(ModalVideo)).call(this, props));
   32  
   33      _this.state = {
   ..
   39    }
   40  
   41:   _createClass(ModalVideo, [{
   42      key: 'openModal',
   43      value: function openModal() {
   ..
  157          _CSSTransition2.default,
  158          {
  159:           classNames: this.props.classNames.modalVideoEffect,
  160            timeout: this.props.animationSpeed
  161          },
  ...
  167            return _react2.default.createElement(
  168              'div',
  169:             { className: _this2.props.classNames.modalVideo, tabIndex: '-1', role: 'dialog',
  170                'aria-label': _this2.props.aria.openMessage, onClick: _this2.closeModal, ref: function ref(node) {
  171                  _this2.modal = node;
  ...
  173              _react2.default.createElement(
  174                'div',
  175:               { className: _this2.props.classNames.modalVideoBody },
  176                _react2.default.createElement(
  177                  'div',
  178:                 { className: _this2.props.classNames.modalVideoInner },
  179                  _react2.default.createElement(
  180                    'div',
  181:                   { className: _this2.props.classNames.modalVideoIframeWrap, style: style },
  182:                   _react2.default.createElement('button', { className: _this2.props.classNames.modalVideoCloseBtn, 'aria-label': _this2.props.aria.dismissBtnMessage, ref: function ref(node) {
  183                        _this2.modalbtn = node;
  184                      }, onKeyDown: _this2.updateFocus }),
  ...
  193    }]);
  194  
  195:   return ModalVideo;
  196  }(_react2.default.Component);
  197  
  198: exports.default = ModalVideo;
  199  
  200  
  201: ModalVideo.defaultProps = {
  202    channel: 'youtube',
  203    isOpen: false,
  ...
  251    animationSpeed: 300,
  252    classNames: {
  253:     modalVideoEffect: 'modal-video-effect',
  254:     modalVideo: 'modal-video',
  255:     modalVideoClose: 'modal-video-close',
  256:     modalVideoBody: 'modal-video-body',
  257:     modalVideoInner: 'modal-video-inner',
  258:     modalVideoIframeWrap: 'modal-video-movie-wrap',
  259:     modalVideoCloseBtn: 'modal-video-close-btn',
  199      body: 'ReactModal__Body--open'
 
  260    },
  261    aria: {

/Users/timeless/react-modal-video/node_modules/.bin/in-install:
    ERROR: Unable to open file

/Users/timeless/react-modal-video/node_modules/.bin/in-publish:
    ERROR: Unable to open file

/Users/timeless/react-modal-video/node_modules/.bin/node-gyp:
    ERROR: Unable to open file

/Users/timeless/react-modal-video/node_modules/.bin/node-sass:
    ERROR: Unable to open file

/Users/timeless/react-modal-video/node_modules/.bin/nopt:
    ERROR: Unable to open file

/Users/timeless/react-modal-video/node_modules/.bin/not-in-install:
    ERROR: Unable to open file

/Users/timeless/react-modal-video/node_modules/.bin/not-in-publish:
    ERROR: Unable to open file

/Users/timeless/react-modal-video/node_modules/.bin/sassgraph:
    ERROR: Unable to open file

/Users/timeless/react-modal-video/src/index.jsx:
    2  import CSSTransition from 'react-transition-group/CSSTransition';
    3  
    4: export default class ModalVideo extends React.Component {
    5  
    6    constructor (props) {
    .
  112      return (
  113        <CSSTransition
  114:         classNames={this.props.classNames.modalVideoEffect}
  115          timeout={this.props.animationSpeed}
  116        >
  ...
  121  
  122            return (
  123:             <div className={this.props.classNames.modalVideo} tabIndex='-1' role='dialog'
  124                aria-label={this.props.aria.openMessage} onClick={this.closeModal} ref={node => { this.modal = node; }} onKeyDown={this.updateFocus}>
  125:               <div className={this.props.classNames.modalVideoBody}>
  126:                 <div className={this.props.classNames.modalVideoInner}>
  127:                   <div className={this.props.classNames.modalVideoIframeWrap} style={style}>
  128:                     <button className={this.props.classNames.modalVideoCloseBtn} aria-label={this.props.aria.dismissBtnMessage} ref={node => { this.modalbtn = node; }} onKeyDown={this.updateFocus} />
  129                      <iframe width='460' height='230' src={this.getVideoUrl(this.props, this.props.videoId)} frameBorder='0' allowFullScreen={this.props.allowFullScreen} tabIndex='-1' allow="autoplay" encrypted-media />
  130                    </div>
  ...
  138  }
  139  
  140: ModalVideo.defaultProps = {
  141    channel: 'youtube',
  142    isOpen: false,
  ...
  190    animationSpeed: 300,
  191    classNames: {
  192:     modalVideoEffect: 'modal-video-effect',
  193:     modalVideo: 'modal-video',
  194:     modalVideoClose: 'modal-video-close',
  195:     modalVideoBody: 'modal-video-body',
  196:     modalVideoInner: 'modal-video-inner',
  197:     modalVideoIframeWrap: 'modal-video-movie-wrap',
  198:     modalVideoCloseBtn: 'modal-video-close-btn',
  199      body: 'ReactModal__Body--open'
  200    },

/Users/timeless/react-modal-video/test/src/index.jsx:
    1  import React from 'react'
    2  import ReactDOM from 'react-dom'
    3: import ModalVideo from '../../lib/index.js'
    4  
    5  class App extends React.Component {
    .
   21      return (
   22        <div>
   23:         <ModalVideo  allow='autoplay' channel='youtube' isOpen={this.state.isOpen} videoId='L61p2uyiMSo' onClose={() => this.setState({isOpen: false})} />
   24          <button onClick={this.openModal}>Open youtube</button>
   25  
   26:         <ModalVideo
   27              channel='youku'
   28              isOpen={this.state.isOpenYouku}

49 matches across 4 files
